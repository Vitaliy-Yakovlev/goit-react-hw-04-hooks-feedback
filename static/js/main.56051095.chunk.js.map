{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Container/Container.module.css","components/Notification/Notification.module.css","components/Notification/Notification.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Container/Container.js","App.js","index.js"],"names":["module","exports","Notification","message","className","s","title","StatisticsFeedback","good","neutral","bad","total","positivePercentage","container","text","desc","FeedbackOptions","options","onLeaveFeedback","list","map","option","item","btn","type","onClick","toUpperCase","substring","Section","children","Container","Feedback","useState","setGood","setNeutral","setBad","countTotalFeedback","event","currentTarget","textContent","toLowerCase","Statistics","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,UAAY,8BAA8B,KAAO,yBAAyB,KAAO,2B,gBCArID,EAAOC,QAAU,CAAC,KAAO,8BAA8B,KAAO,8BAA8B,IAAM,+B,kBCAlGD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,yB,gBCAjED,EAAOC,QAAU,CAAC,MAAQ,2B,iBCA1BD,EAAOC,QAAU,CAAC,MAAQ,8B,qICWXC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGC,UAAWC,IAAEC,MAAhB,SAAwBH,K,gBCiClBI,EAjCY,SAAC,GAAD,IACzBC,EADyB,EACzBA,KACAC,EAFyB,EAEzBA,QACAC,EAHyB,EAGzBA,IACAC,EAJyB,EAIzBA,MACAC,EALyB,EAKzBA,mBALyB,OAOzB,qCACE,oBAAIR,UAAWC,IAAEC,MAAjB,wBAECK,EAAQ,EACP,sBAAKP,UAAWC,IAAEQ,UAAlB,UACE,oBAAGT,UAAWC,IAAES,KAAhB,mBAA6BN,KAC7B,oBAAGJ,UAAWC,IAAES,KAAhB,sBAAgCL,KAChC,oBAAGL,UAAWC,IAAES,KAAhB,kBAA4BJ,KAC5B,oBAAGN,UAAWC,IAAES,KAAhB,oBAA8BH,KAE9B,oBAAGP,UAAWC,IAAEU,KAAhB,gCAA0CH,EAA1C,UAGF,cAAC,EAAD,CAAcT,QAAQ,0B,gBCFba,MAnBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,oBAAId,UAAWC,IAAEc,KAAjB,SACGF,EAAQG,KAAI,SAAAC,GAAM,OACjB,oBAAIjB,UAAWC,IAAEiB,KAAjB,SACE,wBAAQlB,UAAWC,IAAEkB,IAAKC,KAAK,SAASC,QAASP,EAAjD,SACGG,EAAO,GAAGK,cAAgBL,EAAOM,UAAU,MAFpBN,S,gBCSrBO,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUvB,EAAY,EAAZA,MAC3B,OACE,sBAAKF,UAAWC,IAAEQ,UAAlB,UACE,oBAAIT,UAAWC,IAAEC,MAAjB,SAAyBA,IACxBuB,M,gBCOQC,EAXG,SAAC,GAAD,IAAGD,EAAH,EAAGA,SAAH,OAChB,qCACE,oBAAIzB,UAAWC,IAAEC,MAAjB,yCACA,qBAAKF,UAAWC,IAAEQ,UAAlB,SAA8BgB,QCAnB,SAASE,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOxB,EAAP,KAAayB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOvB,EAAP,KAAgByB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOtB,EAAP,KAAYyB,EAAZ,KAKMC,EAAqB,WACzB,OAAO5B,EAAOC,EAAUC,GAqB1B,OACE,cAAC,EAAD,UACE,eAAC,EAAD,CAASJ,MAAM,yBAAf,UACE,cAAC,EAAD,CACEW,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAvBgB,SAAAmB,GAGtB,OAFgBA,EAAMC,cAAcC,YAAYC,eAG9C,IAAK,OACHP,EAAQzB,EAAO,GACf,MACF,IAAK,UACH0B,EAAWzB,EAAU,GACrB,MACF,IAAK,MACH0B,EAAOzB,EAAM,OAcb,cAAC+B,EAAD,CACEjC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOyB,IACPxB,mBApCNJ,EAAOkC,KAAKC,MAAc,IAAPnC,EAAc4B,KAAwB,SCT7DQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.56051095.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__2D4xh\",\"container\":\"Statistics_container__M2wEW\",\"text\":\"Statistics_text__1WzLc\",\"desc\":\"Statistics_desc__7CGdh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__3firB\",\"item\":\"FeedbackOptions_item__Zxhuf\",\"btn\":\"FeedbackOptions_btn__2l4Zt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__lKZV7\",\"title\":\"Section_title__1bBfz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Container_title__2FBQ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Notification_title__307kS\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nconst Notification = ({ message }) => {\n  return <p className={s.title}>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Notification from '../Notification';\nimport s from './Statistics.module.css';\n\nconst StatisticsFeedback = ({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) => (\n  <>\n    <h2 className={s.title}>Statistics</h2>\n\n    {total > 0 ? (\n      <div className={s.container}>\n        <p className={s.text}>Good: {good}</p>\n        <p className={s.text}>Neutral: {neutral}</p>\n        <p className={s.text}>Bad: {bad}</p>\n        <p className={s.text}>Total: {total}</p>\n\n        <p className={s.desc}>Positive feedback: {positivePercentage}%</p>\n      </div>\n    ) : (\n      <Notification message=\"No feedback given\" />\n    )}\n  </>\n);\n\nStatisticsFeedback.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default StatisticsFeedback;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <ul className={s.list}>\n      {options.map(option => (\n        <li className={s.item} key={option}>\n          <button className={s.btn} type=\"button\" onClick={onLeaveFeedback}>\n            {option[0].toUpperCase() + option.substring(1)}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ children, title }) => {\n  return (\n    <div className={s.container}>\n      <h1 className={s.title}>{title}</h1>\n      {children}\n    </div>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <>\n    <h1 className={s.title}>React. Home Work - Feedback</h1>\n    <div className={s.container}>{children}</div>\n  </>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import React, { useState } from 'react';\nimport './index.css';\nimport StatisticsFeedback from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\nimport Container from './components/Container';\n\nexport default function Feedback() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const countPositiveFeedbackPercentage = () =>\n    good ? Math.round((good * 100) / countTotalFeedback()) : 0;\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const handleImcrement = event => {\n    const btnName = event.currentTarget.textContent.toLowerCase();\n\n    switch (btnName) {\n      case 'good':\n        setGood(good + 1);\n        break;\n      case 'neutral':\n        setNeutral(neutral + 1);\n        break;\n      case 'bad':\n        setBad(bad + 1);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Container>\n      <Section title=\"Please leaven feedback\">\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={handleImcrement}\n        />\n        <StatisticsFeedback\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={countTotalFeedback()}\n          positivePercentage={countPositiveFeedbackPercentage()}\n        />\n      </Section>\n    </Container>\n  );\n}\n\n// class Feedback extends Component {\n//   state = {\n//     good: 0,\n//     neutral: 0,\n//     bad: 0,\n//   };\n\n//   countPositiveFeedbackPercentage = () =>\n//     this.state.good\n//       ? Math.round((this.state.good * 100) / this.countTotalFeedback())\n//       : 0;\n\n//   countTotalFeedback = () => {\n//     const { good, neutral, bad } = this.state;\n//     return good + neutral + bad;\n//   };\n\n//   handleImcrement = e => {\n//     const btnName = e.currentTarget.textContent.toLowerCase();\n\n//     Object.keys(this.state).forEach(key => {\n//       if (btnName === key) {\n//         this.setState(prevState => ({\n//           [key]: prevState[key] + 1,\n//         }));\n//       }\n//     });\n//   };\n\n//   render() {\n//     const { good, neutral, bad } = this.state;\n\n//     return (\n//       <Container>\n//         <Section title=\"Please leaven feedback\">\n//           <FeedbackOptions\n//             options={this.state}\n//             onLeaveFeedback={this.handleImcrement}\n//           />\n\n//           <StatisticsFeedback\n//             good={good}\n//             neutral={neutral}\n//             bad={bad}\n//             total={this.countTotalFeedback()}\n//             positivePercentage={this.countPositiveFeedbackPercentage()}\n//           />\n//         </Section>\n//       </Container>\n//     );\n//   }\n// }\n\n// export default Feedback;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}